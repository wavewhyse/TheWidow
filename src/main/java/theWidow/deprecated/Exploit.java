package theWidow.deprecated;

import basemod.AutoAdd;
import basemod.abstracts.CustomCard;
import com.megacrit.cardcrawl.actions.AbstractGameAction;
import com.megacrit.cardcrawl.actions.common.DamageAction;
import com.megacrit.cardcrawl.cards.DamageInfo;
import com.megacrit.cardcrawl.characters.AbstractPlayer;
import com.megacrit.cardcrawl.core.CardCrawlGame;
import com.megacrit.cardcrawl.localization.CardStrings;
import com.megacrit.cardcrawl.monsters.AbstractMonster;
import com.megacrit.cardcrawl.powers.VulnerablePower;
import com.megacrit.cardcrawl.powers.WeakPower;
import theWidow.TheWidow;
import theWidow.WidowMod;

import static theWidow.WidowMod.makeCardPath;

@AutoAdd.Ignore
@Deprecated
public class Exploit extends CustomCard {

    // TEXT DECLARATION

    public static final String ID = WidowMod.makeID(Exploit.class.getSimpleName());
    private static final CardStrings cardStrings = CardCrawlGame.languagePack.getCardStrings(ID);
    private static final String UPGRADE_DESCRIPTION = cardStrings.UPGRADE_DESCRIPTION;
    public static final String IMG = makeCardPath("Exploit.png");

    // /TEXT DECLARATION/

    // STAT DECLARATION

    private static final CardRarity RARITY = CardRarity.UNCOMMON;
    private static final CardTarget TARGET = CardTarget.ENEMY;
    private static final CardType TYPE = CardType.ATTACK;
    public static final CardColor COLOR = TheWidow.Enums.COLOR_BLACK;

    private static final int COST = 0;

    // /STAT DECLARATION/

    public Exploit() {
        super(ID, cardStrings.NAME, IMG, COST, cardStrings.DESCRIPTION, TYPE, COLOR, RARITY, TARGET);
        baseDamage = 0;
    }

    @Override
    public void use(AbstractPlayer p, AbstractMonster m) {
        if (m.hasPower(VulnerablePower.POWER_ID))
            baseDamage += 2 * m.getPower(VulnerablePower.POWER_ID).amount;
        if (upgraded && m.hasPower(WeakPower.POWER_ID))
            baseDamage += 2 * m.getPower(WeakPower.POWER_ID).amount;
        calculateCardDamage(m);
        addToBot(new DamageAction(m, new DamageInfo(p, damage, damageTypeForTurn), AbstractGameAction.AttackEffect.BLUNT_LIGHT));
        baseDamage = 0;
//        if (m.hasPower(WeakPower.POWER_ID))
//            addToBot(new DrawCardAction(1));
//        if (m.hasPower(VulnerablePower.POWER_ID))
//            addToBot(new ApplyPowerAction(p, p, new VigorPower(p, magicNumber), magicNumber));
//        if (m.hasPower(NecrosisPower.POWER_ID))
//            addToBot(new DamageAction(m, new DamageInfo(p, damage, damageTypeForTurn), AbstractGameAction.AttackEffect.BLUNT_LIGHT));
//        int vigorCount = magicNumber * (int)(m.powers.stream().filter(pow -> pow.type == AbstractPower.PowerType.DEBUFF).count());
//        if (vigorCount > 0)
//            addToBot(new ApplyPowerAction(p, p, new VigorPower(p, vigorCount), vigorCount));
    }

    @Override
    public void upgrade() {
        if (!upgraded) {
            upgradeName();
            rawDescription = UPGRADE_DESCRIPTION;
            initializeDescription();
        }
    }
}
